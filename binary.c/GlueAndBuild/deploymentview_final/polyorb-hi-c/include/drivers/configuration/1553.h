#ifndef GENERATED_ASN1SCC_1553_H
#define GENERATED_ASN1SCC_1553_H
/*
Code automatically generated by asn1scc tool
*/
#include "asn1crt.h"

#ifdef  __cplusplus
extern "C" {
#endif


typedef asn1SccUint __po_hi_c_Node_Addr_T;


flag __po_hi_c_Node_Addr_T_Equal(const __po_hi_c_Node_Addr_T* pVal1, const __po_hi_c_Node_Addr_T* pVal2);

void __po_hi_c_Node_Addr_T_Initialize(__po_hi_c_Node_Addr_T* pVal);

#define ERR_NODE_ADDR_T		1  /**/
flag __po_hi_c_Node_Addr_T_IsConstraintValid(const __po_hi_c_Node_Addr_T* pVal, int* pErrCode);
typedef enum {
    __po_hi_c_mil1553a = 0,
    __po_hi_c_mil1553b = 1
} __po_hi_c_Standard_T;

flag __po_hi_c_Standard_T_Equal(const __po_hi_c_Standard_T* pVal1, const __po_hi_c_Standard_T* pVal2);

void __po_hi_c_Standard_T_Initialize(__po_hi_c_Standard_T* pVal);

#define ERR_STANDARD_T		8  /**/
flag __po_hi_c_Standard_T_IsConstraintValid(const __po_hi_c_Standard_T* pVal, int* pErrCode);
typedef enum {
    __po_hi_c_controller = 0,
    __po_hi_c_terminal = 1,
    __po_hi_c_monitor = 2
} __po_hi_c_Mode_T;

flag __po_hi_c_Mode_T_Equal(const __po_hi_c_Mode_T* pVal1, const __po_hi_c_Mode_T* pVal2);

void __po_hi_c_Mode_T_Initialize(__po_hi_c_Mode_T* pVal);

#define ERR_MODE_T		15  /**/
flag __po_hi_c_Mode_T_IsConstraintValid(const __po_hi_c_Mode_T* pVal, int* pErrCode);
typedef enum {
    __po_hi_c_none = 0,
    __po_hi_c_bus_a = 1,
    __po_hi_c_bus_b = 2,
    __po_hi_c_both = 3
} __po_hi_c_Bus_T;

flag __po_hi_c_Bus_T_Equal(const __po_hi_c_Bus_T* pVal1, const __po_hi_c_Bus_T* pVal2);

void __po_hi_c_Bus_T_Initialize(__po_hi_c_Bus_T* pVal);

#define ERR_BUS_T		22  /**/
flag __po_hi_c_Bus_T_IsConstraintValid(const __po_hi_c_Bus_T* pVal, int* pErrCode);
/*-- __po_hi_c_mil_1553_conf_t --------------------------------------------*/
typedef char __po_hi_c_mil_1553_conf_t_devname[21];

typedef struct {
    __po_hi_c_mil_1553_conf_t_devname devname;
    __po_hi_c_Standard_T standard;
    __po_hi_c_Mode_T mode;
    __po_hi_c_Bus_T bus;
    __po_hi_c_Node_Addr_T termaddr;
    flag broadcast;
    flag rxblock;
    flag txblock;

    struct {
        unsigned int rxblock:1;
        unsigned int txblock:1;
    } exist;

} __po_hi_c_mil_1553_conf_t;

flag __po_hi_c_mil_1553_conf_t_devname_Equal(const __po_hi_c_mil_1553_conf_t_devname val1, const __po_hi_c_mil_1553_conf_t_devname val2);

flag __po_hi_c_mil_1553_conf_t_Equal(const __po_hi_c_mil_1553_conf_t* pVal1, const __po_hi_c_mil_1553_conf_t* pVal2);

void __po_hi_c_mil_1553_conf_t_devname_Initialize(__po_hi_c_mil_1553_conf_t_devname val);
void __po_hi_c_mil_1553_conf_t_Initialize(__po_hi_c_mil_1553_conf_t* pVal);

#define ERR_MIL_1553_CONF_T_DEVNAME		29  /**/
#define ERR_MIL_1553_CONF_T_STANDARD		36  /**/
#define ERR_MIL_1553_CONF_T_MODE		47  /**/
#define ERR_MIL_1553_CONF_T_BUS		58  /**/
#define ERR_MIL_1553_CONF_T_TERMADDR		69  /**/
#define ERR_MIL_1553_CONF_T_BROADCAST		80  /**/
#define ERR_MIL_1553_CONF_T_RXBLOCK		87  /**/
#define ERR_MIL_1553_CONF_T_TXBLOCK		94  /**/
flag __po_hi_c_mil_1553_conf_t_IsConstraintValid(const __po_hi_c_mil_1553_conf_t* pVal, int* pErrCode);

 

/* ================= Encoding/Decoding function prototypes =================
 * These functions are placed at the end of the file to make sure all types
 * have been declared first, in case of parameterized ACN encodings
 * ========================================================================= */

 


#ifdef  __cplusplus
}

#endif

#endif